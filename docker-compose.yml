version: '3.5'

services:
  api:
    working_dir: /app
    restart: always
    container_name: api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    links:
      - db:${MYSQL_HOST}
    depends_on:
      - db
    volumes:
      - ./api/src:/app/api/src
      - ./core/src:/app/core/src
      - ./storage:/usr/src/app/storage
    ports:
      - "4000:4000"
    command: 'npm run start:prod:api'
    networks:
      - appnetwork
    tty: true
    stdin_open: true
    environment:
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_USER_PASS: ${MYSQL_USER_PASS}
    env_file: .env
  db:
    image: mysql:latest
    restart: always
    container_name: ${MYSQL_HOST}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_TCP_PORT: ${MYSQL_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
    env_file: .env
    networks:
      - appnetwork
#  frontend:
#    build:
#      context: .
#      dockerfile: ./frontend/Dockerfile
#    volumes:
#      - ./frontend/src:/app/frontend/src
#    stdin_open: true
#    tty: true
#    ports:
#      - "8080:8080"
#    command: 'npm run start:dev:frontend'
#    environment:
#      - CHOKIDAR_USEPOLLING=true
#    networks:
#      - appnetwork
  nginx:
    working_dir: /usr/src/app
    container_name: nginx
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile.nginx
      args:
        - VUE_APP_BACKEND_URL=${VUE_APP_BACKEND_URL}
        - VUE_APP_API_BASE_URL=${VUE_APP_API_BASE_URL}
    volumes:
      - ./storage:/var/www/html/storage/
    ports:
      - "80:80"
      - "443:443"
    tty: true
    env_file: .env
    networks:
      - appnetwork
networks:
  appnetwork:
    driver: bridge
volumes:
  db_data:
  storage: